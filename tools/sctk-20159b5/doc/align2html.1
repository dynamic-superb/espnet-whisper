.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ALIGN2HTML 1"
.TH ALIGN2HTML 1 "2018-11-12" "perl v5.34.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
align2html.pl \- Script that generate an HTML representation of the alignments issued from asclite.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        align2html.pl \-i alignfile \-o outputdir [ \-m mapfile ]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The script is taking in input the sdterr output from asclite Alignment Output) (launched with the option \-f 6 or \-f 7). Using the alignment output, it recreates the graphs of the segments and generates a graphical representation of the multi-dimension alignment. It also generates basic statistical information (Correct, Insertion, ...) regarding the overlap and Segment Group information.
Using the \-m option will add the information of the mapped speaker in every Segment Group representaion file.
.SH "USAGE"
.IX Header "USAGE"
Examples:
.PP
.Vb 2
\&        align2html.pl \-a align.csv \-o output_directory
\&        align2html.pl \-a align.csv \-o output_directory \-m map_file
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fBRequired file arguments:\fR" 4
.IX Item "Required file arguments:"
.RS 4
.PD 0
.IP "\fB\-a\fR, \fB\-\-alignfile <alignfile\fR>" 4
.IX Item "-a, --alignfile <alignfile>"
.PD
The Alignment file from asclite.
.IP "\fB\-o\fR, \fB\-\-output <outputdir\fR>" 4
.IX Item "-o, --output <outputdir>"
The output directory where the files will be generated.
.RE
.RS 4
.RE
.IP "\fBOptions:\fR" 4
.IX Item "Options:"
.RS 4
.PD 0
.IP "\fB\-m\fR,\fB\-\-mapfile <mapfile\fR>" 4
.IX Item "-m,--mapfile <mapfile>"
.PD
The map file allowing to display the speaker mapping information used during the alignment. Use the same mapfile used when asclite was lunched.
.RE
.RS 4
.RE
.IP "\fBOther options:\fR" 4
.IX Item "Other options:"
.RS 4
.PD 0
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
.PD
Display the help.
.RE
.RS 4
.RE
.SH "BUGS"
.IX Header "BUGS"
No known bugs.
.SH "NOTES"
.IX Header "NOTES"
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "Jerome Ajot <jerome.ajot@nist.gov>" 4
.IX Item "Jerome Ajot <jerome.ajot@nist.gov>"
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
\&\s-1NIST\s0 Public Domain
.SH "DISCLAIMER"
.IX Header "DISCLAIMER"
This software was developed at the National Institute of Standards and Technology by employees of the Federal Government in the course of their official duties.  Pursuant to Title 17 Section 105 of the United States Code this software is not subject to copyright protection within the United States and is in the public domain. This software is an experimental system. \s-1NIST\s0 assumes no responsibility whatsoever for its use by any party.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED \*(L"AS IS.\*(R"\s0 With regard to this software, \s-1NIST MAKES NO EXPRESS OR IMPLIED WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.\s0
